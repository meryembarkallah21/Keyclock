{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Extreme PC\\\\OneDrive\\\\9raya projets\\\\if5\\\\keyclock\\\\front\\\\src\\\\components\\\\home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { handleLogError } from '../misc/Helpers';\nimport { moviesApi } from '../misc/BooksApi';\nimport BookList from './BookList';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setBooks] = useState([]);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      setIsLoading(true);\n      try {\n        const response = await moviesApi.getBooks();\n        const movies = response.data;\n        setBooks(movies);\n      } catch (error) {\n        handleLogError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchBooks();\n  }, []);\n  return isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(BookList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(Home, \"4sW6UsY/Re249/aV28AS+Lt8SvU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Container","handleLogError","moviesApi","BookList","Fragment","_Fragment","jsxDEV","_jsxDEV","Home","_s","isLoading","setIsLoading","movies","setBooks","fetchBooks","response","getBooks","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Extreme PC/OneDrive/9raya projets/if5/keyclock/front/src/components/home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container } from 'semantic-ui-react'\nimport { handleLogError } from '../misc/Helpers'\nimport { moviesApi } from '../misc/BooksApi'\nimport BookList from './BookList'\n\nfunction Home() {\n  const [isLoading, setIsLoading] = useState(false)\n  const [movies, setBooks] = useState([])\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      setIsLoading(true)\n      try {\n        const response = await moviesApi.getBooks()\n        const movies = response.data\n\n        setBooks(movies)\n      } catch (error) {\n        handleLogError(error)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    fetchBooks()\n  }, [])\n\n  return (\n    isLoading ? <></> : (\n      <Container>\n        <BookList movies={movies} />\n      </Container>\n    )\n  )\n}\n\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,MAAM,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BH,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMb,SAAS,CAACc,QAAQ,CAAC,CAAC;QAC3C,MAAMJ,MAAM,GAAGG,QAAQ,CAACE,IAAI;QAE5BJ,QAAQ,CAACD,MAAM,CAAC;MAClB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdjB,cAAc,CAACiB,KAAK,CAAC;MACvB,CAAC,SAAS;QACRP,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OACEJ,SAAS,gBAAGH,OAAA,CAAAF,SAAA,mBAAI,CAAC,gBACfE,OAAA,CAACP,SAAS;IAAAmB,QAAA,eACRZ,OAAA,CAACJ,QAAQ;MAACS,MAAM,EAAEA;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CACZ;AAEL;AAACd,EAAA,CA5BQD,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AA8Bb,eAAeA,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}